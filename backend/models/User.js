const mongoose = require("mongoose");
const { Schema } = mongoose;

const UserSchema = new Schema({
  userId: { type: String, required: true, unique: true },
  name: { type: String, default: "User" },
  profilePicture: { type: String, default: "" },
  cloudinaryPublicId: { type: String, default: "" },
  welcomeColumnsAndTask: { type: Boolean, default: false },
  labels: {
    type: [
      {
        title: { type: String },
        color: { type: String },
        order: { type: Number, default: 0 },
      },
    ],
    default: [],
  },
  chartPreferences: {
    type: new Schema(
      {
        timeRangeType: {
          type: String,
          default: "week",
          enum: ["week", "2weeks", "month", "year", "all-time", "custom"],
        },
        taskType: {
          type: String,
          default: "active",
          enum: ["active", "completed", "both"],
        },
        chartType: {
          type: String,
          default: "bar",
          enum: ["bar", "line", "pie", "area", "radar"],
        },
        xAxisField: {
          type: String,
          default: "day",
          enum: ["day", "priority", "label", "status"],
        },
        yAxisMetric: {
          type: String,
          default: "count",
          enum: ["count", "timeSpent", "storyPoints"],
        },
        sortOrder: {
          type: String,
          default: "none",
          enum: ["none", "asc", "desc"],
        },
        dueFilter: {
          type: String,
          default: "both",
          enum: ["both", "due", "overdue"],
        },
        priorityFilters: {
          type: [String],
          enum: [
            "A1",
            "A2",
            "A3",
            "B1",
            "B2",
            "B3",
            "C1",
            "C2",
            "C3",
            "D",
            "E",
          ],
          default: [],
        },
        labelFilters: {
          type: [String],
          default: [],
        },
        includeNoneLabel: { type: Boolean, default: true },
        dayOfWeekFilters: {
          type: [String],
          enum: [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday",
          ],
          default: [],
        },
        statusFilters: { type: [String], default: [] },
        assignedToFilter: { type: String, default: "" },
        minTaskCount: { type: String, default: "" },
        minStoryPoints: { type: String, default: "" },
        minTimeSpent: { type: String, default: "" },
        minTimeUnit: {
          type: String,
          default: "seconds",
          enum: ["seconds", "minutes", "hours"],
        },
        scheduledOnly: { type: Boolean, default: false },
        includeZeroMetrics: { type: Boolean, default: true },
        includeNoDueDate: { type: Boolean, default: true },
        comparisonMode: { type: Boolean, default: false },
        compStartDate: { type: Date, default: null },
        compEndDate: { type: Date, default: null },
        customStartDate: { type: Date, default: null },
        customEndDate: { type: Date, default: null },
      },
      { _id: false },
    ),
    default: () => ({}),
  },
  settingsPreferences: {
    type: new Schema(
      {
        darkMode: { type: Boolean, default: true },
        muteNotifications: { type: Boolean, default: false },
        inactivityTimeoutHours: { type: Number, default: 24 },
        inactivityTimeoutNever: { type: Boolean, default: true },
        defaultPriority: {
          type: String,
          enum: [
            "A1",
            "A2",
            "A3",
            "B1",
            "B2",
            "B3",
            "C1",
            "C2",
            "C3",
            "D",
            "E",
          ],
          default: "A1",
        },
        hideOldCompletedTasksDays: { type: Number, default: 365 },
        hideOldCompletedTasksNever: { type: Boolean, default: true },
        defaultDashboardView: {
          type: String,
          enum: ["boards", "schedule", "completedtasks"],
          default: "boards",
        },
        disableToCreateTask: { type: Boolean, default: false },
        confirmBeforeDeleteTask: { type: Boolean, default: true },
        confirmBeforeDeleteBoard: { type: Boolean, default: true },
        notifyNonPriorityGoesOvertime: { type: Number, default: 1 },
        notifyScheduledTaskIsDue: { type: Number, default: 5 },
        themeAccent: {
          type: String,
          enum: ["Green", "Blue", "Orange", "Purple", "Yellow", "Custom"],
          default: "Green",
        },
        themeAccentCustom: { type: String, default: "" },
        topbarAccent: {
          type: String,
          enum: ["Green", "Blue", "Orange", "Purple", "Yellow", "Custom"],
          default: "Blue",
        },
        topbarAccentCustom: { type: String, default: "" },
        priorityColours: {
          type: Object,
          default: {
            A1: "#ff4d4d",
            A2: "#ff6666",
            A3: "#ff9999",
            B1: "#4d4dff",
            B2: "#6666ff",
            B3: "#9999ff",
            C1: "#4dff4d",
            C2: "#66ff66",
            C3: "#99ff99",
            D: "#cc66ff",
            E: "#ff9966",
          },
        },
        hideLabelText: { type: Boolean, default: false },
      },
      { _id: false },
    ),
    default: () => ({}),
  },
  lastWeeklyNotification: { type: Date, default: null },
});

module.exports = mongoose.model("User", UserSchema);
